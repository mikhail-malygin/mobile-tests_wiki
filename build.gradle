plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
}

repositories {
    mavenCentral()
}

def allureVersion = '2.19.0',
    selenideVersion = '6.9.0',
    restAssuredVersion = '5.2.0',
    junitVersion = "5.9.0",
    slf4jVersion = '2.0.3',
    ownerVersion = "1.0.12",
    appiumVersion = '8.2.0',
    commonsIoVersion = "2.11.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.appium:java-client:$appiumVersion",
            "commons-io:commons-io:$commonsIoVersion"
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task onboarding_test(type: Test) {
    useJUnitPlatform{
        includeTags "onboarding"
    }
}

task language_test(type: Test) {
    useJUnitPlatform{
        includeTags "language"
    }
}

task search_test(type: Test) {
    useJUnitPlatform{
        includeTags "search"
    }
}



